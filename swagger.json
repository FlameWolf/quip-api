{
	"securityDefinitions": {
		"Bearer": {
			"type": "apiKey",
			"name": "Authorization",
			"in": "header",
			"description": "Enter your bearer token in the format **Bearer &#x3C;token&#x3E;**"
		}
	},
	"security": [
		{
			"Bearer": []
		}
	],
	"requestBodies": {
		"Credentials": {
			"content": {
				"application/json": {
					"schema": {
						"type": "object",
						"properties": {
							"handle": {
								"type": "string"
							},
							"password": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"RefreshToken": {
			"content": {
				"application/json": {
					"schema": {
						"type": "object",
						"properties": {
							"refreshToken": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"Post": {
			"content": {
				"multipart/form-data": {
					"schema": {
						"type": "object",
						"properties": {
							"content": {
								"type": "string",
								"format": "textarea"
							},
							"media": {
								"type": "file"
							},
							"media-description": {
								"type": "string"
							}
						}
					}
				}
			}
		},
		"WordMute": {
			"content": {
				"application/json": {
					"schema": {
						"type": "object",
						"properties": {
							"word": {
								"type": "string"
							},
							"match": {
								"type": "string",
								"enum": ["exact", "contains", "startsWith", "endsWith"]
							}
						}
					}
				}
			}
		},
		"FollowRequests": {
			"content": {
				"application/json": {
					"schema": {
						"type": "object",
						"properties": {
							"requestIds": {
								"type": "array",
								"items": {
									"type": "string"
								}
							}
						}
					}
				}
			}
		},
		"Settings": {
			"content": {
				"application/json": {
					"schema": {
						"type": "object",
						"properties": {
							"user": "string",
							"timeline": {
								"type": "object",
								"properties": {
									"includeRepeats": {
										"type": "boolean",
										"default": true
									},
									"includeReplies": {
										"type": "boolean",
										"default": true
									}
								}
							},
							"activity": {
								"type": "object",
								"properties": {
									"period": {
										"type": "string",
										"enum": ["day", "week", "month"]
									}
								}
							},
							"topmost": {
								"type": "object",
								"properties": {
									"period": {
										"type": "string",
										"enum": ["day", "week", "month", "year", "all"]
									}
								}
							},
							"profile": {
								"type": "object",
								"properties": {
									"includeRepeats": {
										"type": "boolean",
										"default": false
									},
									"includeReplies": {
										"type": "boolean",
										"default": false
									}
								}
							}
						}
					}
				}
			}
		}
	},
	"paths": {
		"/auth/sign-up": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/Credentials"
				}
			}
		},
		"/auth/sign-in": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/Credentials"
				}
			}
		},
		"/auth/refresh-token": {
			"post": {
				"parameters": [
					{
						"name": "X-Slug",
						"in": "header",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "X-UID",
						"in": "header",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"$ref": "#/requestBodies/RefreshToken"
				}
			}
		},
		"/posts/create": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/Post"
				}
			}
		},
		"/posts/quote/{postId}": {
			"post": {
				"parameters": [
					{
						"name": "postId",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"$ref": "#/requestBodies/Post"
				}
			}
		},
		"/posts/reply/{postId}": {
			"post": {
				"parameters": [
					{
						"name": "postId",
						"required": true,
						"type": "string"
					}
				],
				"requestBody": {
					"$ref": "#/requestBodies/Post"
				}
			}
		},
		"/settings/mute": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/WordMute"
				}
			}
		},
		"/settings/unmute": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/WordMute"
				}
			}
		},
		"/settings/accept_reqs": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/FollowRequests"
				}
			}
		},
		"/settings/reject_reqs": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/FollowRequests"
				}
			}
		},
		"/timeline": {
			"get": {
				"parameters": [
					{
						"name": "includeRepeats",
						"in": "query",
						"type": "boolean"
					},
					{
						"name": "includeReplies",
						"in": "query",
						"type": "boolean"
					},
					{
						"name": "lastPostId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/activity/{period}": {
			"get": {
				"parameters": [
					{
						"name": "period",
						"in": "path",
						"required": false,
						"type": "string",
						"enum": ["?", "day", "week", "month"]
					},
					{
						"name": "lastPostId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/activity/{period?}": {
			"get": {
				"parameters": [
					{
						"name": "description",
						"enum": ["Go to [/activity/{period}](/#/default/get_activity__period_) for the correct endpoint stub"]
					}
				]
			}
		},
		"/settings": {
			"post": {
				"requestBody": {
					"$ref": "#/requestBodies/Settings"
				}
			}
		},
		"/settings/{path}": {
			"get": {
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"type": "string"
					}
				]
			},
			"put": {
				"parameters": [
					{
						"name": "path",
						"in": "path",
						"required": true,
						"type": "string"
					},
					{
						"name": "value",
						"in": "query",
						"required": true
					}
				]
			}
		},
		"/topmost/{period}": {
			"get": {
				"parameters": [
					{
						"name": "period",
						"in": "path",
						"required": false,
						"type": "string",
						"enum": ["?", "day", "week", "month", "year", "all"]
					}
				]
			}
		},
		"/topmost/{period?}": {
			"get": {
				"parameters": [
					{
						"name": "description",
						"enum": ["Go to [/topmost/{period}](/#/default/get_topmost__period_) for the correct endpoint stub"]
					}
				]
			}
		},
		"/users/{handle}/posts": {
			"get": {
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"type": "string"
					},
					{
						"name": "includeRepeats",
						"in": "query",
						"type": "boolean"
					},
					{
						"name": "includeReplies",
						"in": "query",
						"type": "boolean"
					},
					{
						"name": "lastPostId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/users/{handle}/favourites": {
			"get": {
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"type": "string"
					},
					{
						"name": "lastFavouriteId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/users/{handle}/following": {
			"get": {
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"type": "string"
					},
					{
						"name": "lastFollowId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/users/{handle}/followers": {
			"get": {
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"type": "string"
					},
					{
						"name": "lastFollowId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/users/{handle}/mentions": {
			"get": {
				"parameters": [
					{
						"name": "handle",
						"in": "path",
						"type": "string"
					},
					{
						"name": "lastMentionId",
						"in": "query",
						"type": "string"
					}
				]
			}
		},
		"/search": {
			"get": {
				"parameters": [
					{
						"name": "q",
						"in": "query",
						"required": true,
						"type": "string"
					},
					{
						"name": "from",
						"in": "query",
						"type": "string"
					},
					{
						"name": "since",
						"in": "query",
						"type": "string"
					},
					{
						"name": "until",
						"in": "query",
						"type": "string"
					},
					{
						"name": "has-media",
						"in": "query",
						"type": "string"
					},
					{
						"name": "not-from",
						"in": "query",
						"type": "string"
					},
					{
						"name": "date-sort",
						"in": "query",
						"type": "string"
					},
					{
						"name": "lastScore",
						"in": "query",
						"type": "string"
					},
					{
						"name": "lastPostId",
						"in": "query",
						"type": "string"
					}
				]
			}
		}
	}
}